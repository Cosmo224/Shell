ShellXML Scripting Language for Shell Project
V1.3
©2019 Cosmo
This is a scripting language for my TUI shell project.

-Updates-
V1.4 2019-09-29: Added <Exception>
V1.3 2019-09-15: Added stuff
V1.2 2019-09-09: Added <Input> and renamed <Text> to <Output>
V1.1 2019-09-08: Specified the explicitness and implicitness of variable types. Added floats.

Contents.
1. INTRODUCTION
2. OPERATORS
3. VARIABLES
3A. EXPLICITLY DEFINED VARIABLE TYPES
3B. SUPERGLOBALS
4. KEYWORDS
5. EVENTS/CALLBACKS
6. COMMENTS
7. VISUAL TEXT-BASED ELEMENTS
8. ERRORS (preliminary)
9. HOW SHELLUI PARSES THE ELEMENTS

1. INTRODUCTION
ShellXML is a scripting language designed for usage with my shell project. Everything uses XML nodes. 
2. OPERATORS
Operators are used using the <Operation>, or <Op> XML node.
Parameters:
op - The operation to be performed. Takes two or more variables previously defined with <var></var>, or two numbers. REQUIRED
var - The var to store it in. REQUIRED. Creates a variable that you can use later.
EXAMPLE:
<Operation op="var1 + var2" var="var3"></Operation>
<Op op="var1 + var2" var="var3"></Op>
<Op op="7 + 5821731" var="8as8d8"></Op>
<Op operands="7,6,3" stufftodowiththem="+,-,+"></Op> ?
3. VARIABLES
Variables are declared either by creating them with an operation, or using the <Var> node.
Parameters:
name - The name of the variable. REQUIRED.
value - The initial value of the variable. OPTIONAL.
type - The type of the variable. OPTIONAL. Can be either int (or number), string, double, float, bool or char. 
Defaults:
If the variable is a number, it is an double.
If the variable is a string, it is a string.
If the variable is true or false, it is a bool.

3A. EXPLICITLY DEFINED VARIABLE TYPES
Additional variable types can be declared.
Float - a single-precision floating point number.
Char - a single character.

3B. SUPERGLOBALS
A superglobal is a variable visible to every single ShellXML application. They include:
- ShellCoreVer - the version of shellcore
- ShellUIVer - the version of shellui

Example:
<Var name="wow">
<Var name="wow" value="723">
<Var type="string" name="wow" value="550">
<Var name="wow" value="2.24"> - would default as a double
<Var name="wow" value="T"> - Would default as a string (ORIGINALLY CHAR)

4. KEYWORDS
Keywords are used for control flow.
<If></If>
- Used for if statements.
Parameters:
condition - contains the condition. Code to execute is contained within the if block.
<If condition="wow_bool = true">
	<Var name="bool2" value="105">
</If>
<Else>
Used for If-Else statements.
No parameters. 
<If condition="wow_bool = true">
	<Var name="bool2" value="105">
<Else>
	<Var name="bool2">
</If>

<While> 
Used for While statements.
Parameters:
condition - contains the condition. Code to execute is contained within the while block.
infinite - loop infinitely. Used for mainloops. Or you can do <while condition="true = true">... 1/True = infinite loop, 0/False = non-infinite loop

<While infinite="1">
..do stuff...
</While>

<Function>
Calls a function in a separate file.
Parameters:
path - the path to the function.

<Exception>
Throws an ExceptionsLite exception. V7.1+

<For> 
Used for For statemetns.
Parameters:
start - contains the start value of the for loop.
end - contains the end value of the for loop.
step - contains the step.
CONSIDERING - Foreach

<For start="2" end="50" step="5">
...do stuff
</For>
5. EVENTS/CALLBACKS
Events are used for triggering ShellCore & ShellUI to do stuff. They are handled by the <Event> node or an event parameter in another node.
Attributes
<Event event="CreateFile"...>
Events

Exit				Exits the application.
ExitShell			Exits the Shell.
CreateFile			Creates a file.
DeleteFile			Deletes a file.
CopyFile			Copies a file.
MoveFile			Moves a file.
SetConsoleColour		Changes the console colour.
ConsoleClear			Clears the console.
LoadScript			Loads another script file
PrintChar/PrintBlankSpace	Prints a char to the console, with an optional repeat amount.
ThrowException			Throws an ExceptionsLite exception
More will be added as more stuff is added to ShellCore.

Events have different parameters depending on what the event is.
CreateFile, DeleteFile, CopyFile, LoadScript, and MoveFile all share the path attribute. This is the file to copy, delete, move, load, or create.
DeleteFile additionally has the askuser attribute. This will ask the user with a standard message what they want to delete. CONSIDERING: custom messages.
CopyFile and MoveFile add the "newpath" attribute. This is the path to copy or move the file to.
SetConsoleColour has the foregroundcolor and backgroundcolor attribute, to set the colours.
PrintChar has the char attribute (which can be any ANSI char iirc), and an optional repeat attribute to repeatedly print the character a specified number of times.
PrintBlankSpace is an alias for PrintChar<char=' '>. It only has the repeat attribute.
Exit and ExitShell share the exitcode attribute, for the exit code to use while exiting.
ConsoleClear has no attributes.

<Event event="CreateFile" path="wow.tmp">
6. COMMENTS
Comments are prefixed with -. 
7. VISUAL ELEMENTS
These are nodes that handle visual interface elements.

<Input>
This gets input from the user and stores it in a variable.

Attributes:

text - The text to get the input with. OPTIONAL (one can use output beforehand if wanted).
char - character to print before the input. OPTIONAL. 
posx - x position in characters from 0,0. OPTIONAL.
posy - y position in characters from 0,0. OPTIONAL.
var - var to store it in. REQUIRED.
<Output>
This just writes text out to the console.

Attributes:
text - The text to write. REQUIRED.
posx - x position in characters from 0,0. OPTIONAL.
posy - y position in characters from 0,0. OPTIONAL.
If posx/posy are not supplied it doesn't set it to the position

MAYBE: CHANGE THIS TO <MENU><OPTION></OPTION></MENU> etc
PROBABLY LATER: <COLOUR> <BLANKSPACE>

<Option>
This allows easy creation of menus.
Attributes:
text - The text to use for the menu. 
button - the button to be used for triggering the menu 
posx - x position in characters from 0,0
posy - y position in characters from 0,0

<Button>
<Option> but it creates a nice button around it

<OpenDialog>
Creates a standard open dialog. Fills about half of the screen. 
Attributes:
var - The variable to store the user choice in. Must already exist. Must be a string.
<SaveDialog>
8. OTHER STATEMENTS THAT DO SPECIFIC FUNCTIONS
<Exit>
Alias for <Event event="Exit">. Optionally can provide exitcode attribute.
<App>
Declares application information. Alternatively can be supplied in a separate file.
<Author> - Author of the application
<Description> - Application decription
<Notes> - Notes
<ShellMinimum> - Minimum version of the shell the app works with.
<Version> - Version of the application


9. ERRORS
Errors starting with 1000 are syntax errors. Errors starting with 2000 are runtime errors.
10. HOW SHELLUI PARSES THE ELEMENTS
ShellUI tokenizes them, and then executes shellcore and shellui functions based off of them.
--GENERAL ERRORS--

string varName





